Terminals unused in grammar

    L_SQUARE_BRACKET
    R_SQUARE_BRACKET


State 92 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM Ident SEMICOLON declarations BEGINPROGRAM statements ENDPROGRAM

    2 declarations: ε
    3             | declaration SEMICOLON declarations
    4             | declaration error

    5 declaration: identifiers COLON INTEGER
    6            | identifiers COLON ARRAY LPAREN NUMBER RPAREN OF INTEGER

    7 identifiers: Ident
    8            | Ident COMMA identifiers

    9 Ident: IDENT

   10 statements: statement SEMICOLON statements
   11           | statement SEMICOLON
   12           | statement error

   13 statement: svar
   14          | sif
   15          | swhile
   16          | sread
   17          | swrite

   18 svar: var ASSIGN expression

   19 sif: IF bool_expr THEN statements ENDIF
   20    | IF bool_expr THEN statements ELSE statements ENDIF

   21 swhile: WHILE bool_expr LOOP statements ENDLOOP

   22 varLoop: ε
   23        | COMMA var varLoop

   24 sread: READ var varLoop

   25 swrite: WRITE var varLoop

   26 bool_expr: relation_exprs
   27          | bool_expr OR relation_exprs

   28 relation_exprs: relation_expr
   29               | relation_exprs AND relation_expr

   30 relation_expr: NOT ece
   31              | ece
   32              | TRUE
   33              | FALSE
   34              | LPAREN bool_expr RPAREN

   35 ece: expression comp expression

   36 comp: EQ
   37     | NEQ
   38     | LT
   39     | GT
   40     | LTE
   41     | GTE

   42 expression: multi_expr addSubExpr
   43           | error

   44 addSubExpr: ε
   45           | ADD expression
   46           | SUB expression

   47 multi_expr: term
   48           | term MULT multi_expr
   49           | term DIV multi_expr
   50           | term MOD multi_expr

   51 term: SUB var
   52     | var
   53     | SUB NUMBER
   54     | NUMBER
   55     | LPAREN expression RPAREN
   56     | Ident LPAREN expression expressionLoop RPAREN

   57 expressionLoop: ε
   58               | COMMA expression expressionLoop

   59 var: Ident
   60    | Ident LPAREN expression RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4 12 43
    PROGRAM (258) 1
    BEGINPROGRAM (259) 1
    ENDPROGRAM (260) 1
    INTEGER (261) 5 6
    ARRAY (262) 6
    OF (263) 6
    IF (264) 19 20
    THEN (265) 19 20
    ENDIF (266) 19 20
    ELSE (267) 20
    WHILE (268) 21
    LOOP (269) 21
    ENDLOOP (270) 21
    READ (271) 24
    WRITE (272) 25
    TRUE (273) 32
    FALSE (274) 33
    ASSIGN (275) 18
    SEMICOLON (276) 1 3 10 11
    COLON (277) 5 6
    COMMA (278) 8 23 58
    LPAREN (279) 6 34 55 56 60
    RPAREN (280) 6 34 55 56 60
    L_SQUARE_BRACKET (281)
    R_SQUARE_BRACKET (282)
    MULT (283) 48
    DIV (284) 49
    MOD (285) 50
    ADD (286) 45
    SUB (287) 46 51 53
    LT (288) 38
    LTE (289) 40
    GT (290) 39
    GTE (291) 41
    EQ (292) 36
    NEQ (293) 37
    NOT (294) 30
    AND (295) 29
    OR (296) 27
    NUMBER <numVal> (297) 6 53 54
    IDENT <identVal> (298) 9


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program (45)
        on left: 1
        on right: 0
    declarations (46)
        on left: 2 3 4
        on right: 1 3
    declaration (47)
        on left: 5 6
        on right: 3 4
    identifiers (48)
        on left: 7 8
        on right: 5 6 8
    Ident (49)
        on left: 9
        on right: 1 7 8 56 59 60
    statements (50)
        on left: 10 11 12
        on right: 1 10 19 20 21
    statement (51)
        on left: 13 14 15 16 17
        on right: 10 11 12
    svar (52)
        on left: 18
        on right: 13
    sif (53)
        on left: 19 20
        on right: 14
    swhile (54)
        on left: 21
        on right: 15
    varLoop (55)
        on left: 22 23
        on right: 23 24 25
    sread (56)
        on left: 24
        on right: 16
    swrite (57)
        on left: 25
        on right: 17
    bool_expr (58)
        on left: 26 27
        on right: 19 20 21 27 34
    relation_exprs (59)
        on left: 28 29
        on right: 26 27 29
    relation_expr (60)
        on left: 30 31 32 33 34
        on right: 28 29
    ece (61)
        on left: 35
        on right: 30 31
    comp (62)
        on left: 36 37 38 39 40 41
        on right: 35
    expression (63)
        on left: 42 43
        on right: 18 35 45 46 55 56 58 60
    addSubExpr (64)
        on left: 44 45 46
        on right: 42
    multi_expr (65)
        on left: 47 48 49 50
        on right: 42 48 49 50
    term (66)
        on left: 51 52 53 54 55 56
        on right: 47 48 49 50
    expressionLoop (67)
        on left: 57 58
        on right: 56 58
    var (68)
        on left: 59 60
        on right: 18 23 24 25 51 52


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • Ident SEMICOLON declarations BEGINPROGRAM statements ENDPROGRAM

    IDENT  shift, and go to state 3

    Ident  go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    9 Ident: IDENT •

    $default  reduce using rule 9 (Ident)


State 4

    1 program: PROGRAM Ident • SEMICOLON declarations BEGINPROGRAM statements ENDPROGRAM

    SEMICOLON  shift, and go to state 6


State 5

    0 $accept: program $end •

    $default  accept


State 6

    1 program: PROGRAM Ident SEMICOLON • declarations BEGINPROGRAM statements ENDPROGRAM

    IDENT  shift, and go to state 3

    $default  reduce using rule 2 (declarations)

    declarations  go to state 7
    declaration   go to state 8
    identifiers   go to state 9
    Ident         go to state 10


State 7

    1 program: PROGRAM Ident SEMICOLON declarations • BEGINPROGRAM statements ENDPROGRAM

    BEGINPROGRAM  shift, and go to state 11


State 8

    3 declarations: declaration • SEMICOLON declarations
    4             | declaration • error

    error      shift, and go to state 12
    SEMICOLON  shift, and go to state 13


State 9

    5 declaration: identifiers • COLON INTEGER
    6            | identifiers • COLON ARRAY LPAREN NUMBER RPAREN OF INTEGER

    COLON  shift, and go to state 14


State 10

    7 identifiers: Ident •
    8            | Ident • COMMA identifiers

    COMMA  shift, and go to state 15

    $default  reduce using rule 7 (identifiers)


State 11

    1 program: PROGRAM Ident SEMICOLON declarations BEGINPROGRAM • statements ENDPROGRAM

    IF     shift, and go to state 16
    WHILE  shift, and go to state 17
    READ   shift, and go to state 18
    WRITE  shift, and go to state 19
    IDENT  shift, and go to state 3

    Ident       go to state 20
    statements  go to state 21
    statement   go to state 22
    svar        go to state 23
    sif         go to state 24
    swhile      go to state 25
    sread       go to state 26
    swrite      go to state 27
    var         go to state 28


State 12

    4 declarations: declaration error •

    $default  reduce using rule 4 (declarations)


State 13

    3 declarations: declaration SEMICOLON • declarations

    IDENT  shift, and go to state 3

    $default  reduce using rule 2 (declarations)

    declarations  go to state 29
    declaration   go to state 8
    identifiers   go to state 9
    Ident         go to state 10


State 14

    5 declaration: identifiers COLON • INTEGER
    6            | identifiers COLON • ARRAY LPAREN NUMBER RPAREN OF INTEGER

    INTEGER  shift, and go to state 30
    ARRAY    shift, and go to state 31


State 15

    8 identifiers: Ident COMMA • identifiers

    IDENT  shift, and go to state 3

    identifiers  go to state 32
    Ident        go to state 10


State 16

   19 sif: IF • bool_expr THEN statements ENDIF
   20    | IF • bool_expr THEN statements ELSE statements ENDIF

    error   shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    LPAREN  shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident           go to state 40
    bool_expr       go to state 41
    relation_exprs  go to state 42
    relation_expr   go to state 43
    ece             go to state 44
    expression      go to state 45
    multi_expr      go to state 46
    term            go to state 47
    var             go to state 48


State 17

   21 swhile: WHILE • bool_expr LOOP statements ENDLOOP

    error   shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    LPAREN  shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident           go to state 40
    bool_expr       go to state 49
    relation_exprs  go to state 42
    relation_expr   go to state 43
    ece             go to state 44
    expression      go to state 45
    multi_expr      go to state 46
    term            go to state 47
    var             go to state 48


State 18

   24 sread: READ • var varLoop

    IDENT  shift, and go to state 3

    Ident  go to state 20
    var    go to state 50


State 19

   25 swrite: WRITE • var varLoop

    IDENT  shift, and go to state 3

    Ident  go to state 20
    var    go to state 51


State 20

   59 var: Ident •
   60    | Ident • LPAREN expression RPAREN

    LPAREN  shift, and go to state 52

    $default  reduce using rule 59 (var)


State 21

    1 program: PROGRAM Ident SEMICOLON declarations BEGINPROGRAM statements • ENDPROGRAM

    ENDPROGRAM  shift, and go to state 53


State 22

   10 statements: statement • SEMICOLON statements
   11           | statement • SEMICOLON
   12           | statement • error

    error      shift, and go to state 54
    SEMICOLON  shift, and go to state 55


State 23

   13 statement: svar •

    $default  reduce using rule 13 (statement)


State 24

   14 statement: sif •

    $default  reduce using rule 14 (statement)


State 25

   15 statement: swhile •

    $default  reduce using rule 15 (statement)


State 26

   16 statement: sread •

    $default  reduce using rule 16 (statement)


State 27

   17 statement: swrite •

    $default  reduce using rule 17 (statement)


State 28

   18 svar: var • ASSIGN expression

    ASSIGN  shift, and go to state 56


State 29

    3 declarations: declaration SEMICOLON declarations •

    $default  reduce using rule 3 (declarations)


State 30

    5 declaration: identifiers COLON INTEGER •

    $default  reduce using rule 5 (declaration)


State 31

    6 declaration: identifiers COLON ARRAY • LPAREN NUMBER RPAREN OF INTEGER

    LPAREN  shift, and go to state 57


State 32

    8 identifiers: Ident COMMA identifiers •

    $default  reduce using rule 8 (identifiers)


State 33

   43 expression: error •

    $default  reduce using rule 43 (expression)


State 34

   32 relation_expr: TRUE •

    $default  reduce using rule 32 (relation_expr)


State 35

   33 relation_expr: FALSE •

    $default  reduce using rule 33 (relation_expr)


State 36

   34 relation_expr: LPAREN • bool_expr RPAREN
   55 term: LPAREN • expression RPAREN

    error   shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    LPAREN  shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident           go to state 40
    bool_expr       go to state 58
    relation_exprs  go to state 42
    relation_expr   go to state 43
    ece             go to state 44
    expression      go to state 59
    multi_expr      go to state 46
    term            go to state 47
    var             go to state 48


State 37

   51 term: SUB • var
   53     | SUB • NUMBER

    NUMBER  shift, and go to state 60
    IDENT   shift, and go to state 3

    Ident  go to state 20
    var    go to state 61


State 38

   30 relation_expr: NOT • ece

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    ece         go to state 63
    expression  go to state 45
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 39

   54 term: NUMBER •

    $default  reduce using rule 54 (term)


State 40

   56 term: Ident • LPAREN expression expressionLoop RPAREN
   59 var: Ident •
   60    | Ident • LPAREN expression RPAREN

    LPAREN  shift, and go to state 64

    $default  reduce using rule 59 (var)


State 41

   19 sif: IF bool_expr • THEN statements ENDIF
   20    | IF bool_expr • THEN statements ELSE statements ENDIF
   27 bool_expr: bool_expr • OR relation_exprs

    THEN  shift, and go to state 65
    OR    shift, and go to state 66


State 42

   26 bool_expr: relation_exprs •
   29 relation_exprs: relation_exprs • AND relation_expr

    AND  shift, and go to state 67

    $default  reduce using rule 26 (bool_expr)


State 43

   28 relation_exprs: relation_expr •

    $default  reduce using rule 28 (relation_exprs)


State 44

   31 relation_expr: ece •

    $default  reduce using rule 31 (relation_expr)


State 45

   35 ece: expression • comp expression

    LT   shift, and go to state 68
    LTE  shift, and go to state 69
    GT   shift, and go to state 70
    GTE  shift, and go to state 71
    EQ   shift, and go to state 72
    NEQ  shift, and go to state 73

    comp  go to state 74


State 46

   42 expression: multi_expr • addSubExpr

    ADD  shift, and go to state 75
    SUB  shift, and go to state 76

    $default  reduce using rule 44 (addSubExpr)

    addSubExpr  go to state 77


State 47

   47 multi_expr: term •
   48           | term • MULT multi_expr
   49           | term • DIV multi_expr
   50           | term • MOD multi_expr

    MULT  shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80

    $default  reduce using rule 47 (multi_expr)


State 48

   52 term: var •

    $default  reduce using rule 52 (term)


State 49

   21 swhile: WHILE bool_expr • LOOP statements ENDLOOP
   27 bool_expr: bool_expr • OR relation_exprs

    LOOP  shift, and go to state 81
    OR    shift, and go to state 66


State 50

   24 sread: READ var • varLoop

    COMMA  shift, and go to state 82

    $default  reduce using rule 22 (varLoop)

    varLoop  go to state 83


State 51

   25 swrite: WRITE var • varLoop

    COMMA  shift, and go to state 82

    $default  reduce using rule 22 (varLoop)

    varLoop  go to state 84


State 52

   60 var: Ident LPAREN • expression RPAREN

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    expression  go to state 85
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 53

    1 program: PROGRAM Ident SEMICOLON declarations BEGINPROGRAM statements ENDPROGRAM •

    $default  reduce using rule 1 (program)


State 54

   12 statements: statement error •

    $default  reduce using rule 12 (statements)


State 55

   10 statements: statement SEMICOLON • statements
   11           | statement SEMICOLON •

    IF     shift, and go to state 16
    WHILE  shift, and go to state 17
    READ   shift, and go to state 18
    WRITE  shift, and go to state 19
    IDENT  shift, and go to state 3

    $default  reduce using rule 11 (statements)

    Ident       go to state 20
    statements  go to state 86
    statement   go to state 22
    svar        go to state 23
    sif         go to state 24
    swhile      go to state 25
    sread       go to state 26
    swrite      go to state 27
    var         go to state 28


State 56

   18 svar: var ASSIGN • expression

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    expression  go to state 87
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 57

    6 declaration: identifiers COLON ARRAY LPAREN • NUMBER RPAREN OF INTEGER

    NUMBER  shift, and go to state 88


State 58

   27 bool_expr: bool_expr • OR relation_exprs
   34 relation_expr: LPAREN bool_expr • RPAREN

    RPAREN  shift, and go to state 89
    OR      shift, and go to state 66


State 59

   35 ece: expression • comp expression
   55 term: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 90
    LT      shift, and go to state 68
    LTE     shift, and go to state 69
    GT      shift, and go to state 70
    GTE     shift, and go to state 71
    EQ      shift, and go to state 72
    NEQ     shift, and go to state 73

    comp  go to state 74


State 60

   53 term: SUB NUMBER •

    $default  reduce using rule 53 (term)


State 61

   51 term: SUB var •

    $default  reduce using rule 51 (term)


State 62

   55 term: LPAREN • expression RPAREN

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    expression  go to state 91
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 63

   30 relation_expr: NOT ece •

    $default  reduce using rule 30 (relation_expr)


State 64

   56 term: Ident LPAREN • expression expressionLoop RPAREN
   60 var: Ident LPAREN • expression RPAREN

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    expression  go to state 92
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 65

   19 sif: IF bool_expr THEN • statements ENDIF
   20    | IF bool_expr THEN • statements ELSE statements ENDIF

    IF     shift, and go to state 16
    WHILE  shift, and go to state 17
    READ   shift, and go to state 18
    WRITE  shift, and go to state 19
    IDENT  shift, and go to state 3

    Ident       go to state 20
    statements  go to state 93
    statement   go to state 22
    svar        go to state 23
    sif         go to state 24
    swhile      go to state 25
    sread       go to state 26
    swrite      go to state 27
    var         go to state 28


State 66

   27 bool_expr: bool_expr OR • relation_exprs

    error   shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    LPAREN  shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident           go to state 40
    relation_exprs  go to state 94
    relation_expr   go to state 43
    ece             go to state 44
    expression      go to state 45
    multi_expr      go to state 46
    term            go to state 47
    var             go to state 48


State 67

   29 relation_exprs: relation_exprs AND • relation_expr

    error   shift, and go to state 33
    TRUE    shift, and go to state 34
    FALSE   shift, and go to state 35
    LPAREN  shift, and go to state 36
    SUB     shift, and go to state 37
    NOT     shift, and go to state 38
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident          go to state 40
    relation_expr  go to state 95
    ece            go to state 44
    expression     go to state 45
    multi_expr     go to state 46
    term           go to state 47
    var            go to state 48


State 68

   38 comp: LT •

    $default  reduce using rule 38 (comp)


State 69

   40 comp: LTE •

    $default  reduce using rule 40 (comp)


State 70

   39 comp: GT •

    $default  reduce using rule 39 (comp)


State 71

   41 comp: GTE •

    $default  reduce using rule 41 (comp)


State 72

   36 comp: EQ •

    $default  reduce using rule 36 (comp)


State 73

   37 comp: NEQ •

    $default  reduce using rule 37 (comp)


State 74

   35 ece: expression comp • expression

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    expression  go to state 96
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 75

   45 addSubExpr: ADD • expression

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    expression  go to state 97
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 76

   46 addSubExpr: SUB • expression

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    expression  go to state 98
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 77

   42 expression: multi_expr addSubExpr •

    $default  reduce using rule 42 (expression)


State 78

   48 multi_expr: term MULT • multi_expr

    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    multi_expr  go to state 99
    term        go to state 47
    var         go to state 48


State 79

   49 multi_expr: term DIV • multi_expr

    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    multi_expr  go to state 100
    term        go to state 47
    var         go to state 48


State 80

   50 multi_expr: term MOD • multi_expr

    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    multi_expr  go to state 101
    term        go to state 47
    var         go to state 48


State 81

   21 swhile: WHILE bool_expr LOOP • statements ENDLOOP

    IF     shift, and go to state 16
    WHILE  shift, and go to state 17
    READ   shift, and go to state 18
    WRITE  shift, and go to state 19
    IDENT  shift, and go to state 3

    Ident       go to state 20
    statements  go to state 102
    statement   go to state 22
    svar        go to state 23
    sif         go to state 24
    swhile      go to state 25
    sread       go to state 26
    swrite      go to state 27
    var         go to state 28


State 82

   23 varLoop: COMMA • var varLoop

    IDENT  shift, and go to state 3

    Ident  go to state 20
    var    go to state 103


State 83

   24 sread: READ var varLoop •

    $default  reduce using rule 24 (sread)


State 84

   25 swrite: WRITE var varLoop •

    $default  reduce using rule 25 (swrite)


State 85

   60 var: Ident LPAREN expression • RPAREN

    RPAREN  shift, and go to state 104


State 86

   10 statements: statement SEMICOLON statements •

    $default  reduce using rule 10 (statements)


State 87

   18 svar: var ASSIGN expression •

    $default  reduce using rule 18 (svar)


State 88

    6 declaration: identifiers COLON ARRAY LPAREN NUMBER • RPAREN OF INTEGER

    RPAREN  shift, and go to state 105


State 89

   34 relation_expr: LPAREN bool_expr RPAREN •

    $default  reduce using rule 34 (relation_expr)


State 90

   55 term: LPAREN expression RPAREN •

    $default  reduce using rule 55 (term)


State 91

   55 term: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 90


State 92

   56 term: Ident LPAREN expression • expressionLoop RPAREN
   60 var: Ident LPAREN expression • RPAREN

    COMMA   shift, and go to state 106
    RPAREN  shift, and go to state 104

    RPAREN  [reduce using rule 57 (expressionLoop)]

    expressionLoop  go to state 107


State 93

   19 sif: IF bool_expr THEN statements • ENDIF
   20    | IF bool_expr THEN statements • ELSE statements ENDIF

    ENDIF  shift, and go to state 108
    ELSE   shift, and go to state 109


State 94

   27 bool_expr: bool_expr OR relation_exprs •
   29 relation_exprs: relation_exprs • AND relation_expr

    AND  shift, and go to state 67

    $default  reduce using rule 27 (bool_expr)


State 95

   29 relation_exprs: relation_exprs AND relation_expr •

    $default  reduce using rule 29 (relation_exprs)


State 96

   35 ece: expression comp expression •

    $default  reduce using rule 35 (ece)


State 97

   45 addSubExpr: ADD expression •

    $default  reduce using rule 45 (addSubExpr)


State 98

   46 addSubExpr: SUB expression •

    $default  reduce using rule 46 (addSubExpr)


State 99

   48 multi_expr: term MULT multi_expr •

    $default  reduce using rule 48 (multi_expr)


State 100

   49 multi_expr: term DIV multi_expr •

    $default  reduce using rule 49 (multi_expr)


State 101

   50 multi_expr: term MOD multi_expr •

    $default  reduce using rule 50 (multi_expr)


State 102

   21 swhile: WHILE bool_expr LOOP statements • ENDLOOP

    ENDLOOP  shift, and go to state 110


State 103

   23 varLoop: COMMA var • varLoop

    COMMA  shift, and go to state 82

    $default  reduce using rule 22 (varLoop)

    varLoop  go to state 111


State 104

   60 var: Ident LPAREN expression RPAREN •

    $default  reduce using rule 60 (var)


State 105

    6 declaration: identifiers COLON ARRAY LPAREN NUMBER RPAREN • OF INTEGER

    OF  shift, and go to state 112


State 106

   58 expressionLoop: COMMA • expression expressionLoop

    error   shift, and go to state 33
    LPAREN  shift, and go to state 62
    SUB     shift, and go to state 37
    NUMBER  shift, and go to state 39
    IDENT   shift, and go to state 3

    Ident       go to state 40
    expression  go to state 113
    multi_expr  go to state 46
    term        go to state 47
    var         go to state 48


State 107

   56 term: Ident LPAREN expression expressionLoop • RPAREN

    RPAREN  shift, and go to state 114


State 108

   19 sif: IF bool_expr THEN statements ENDIF •

    $default  reduce using rule 19 (sif)


State 109

   20 sif: IF bool_expr THEN statements ELSE • statements ENDIF

    IF     shift, and go to state 16
    WHILE  shift, and go to state 17
    READ   shift, and go to state 18
    WRITE  shift, and go to state 19
    IDENT  shift, and go to state 3

    Ident       go to state 20
    statements  go to state 115
    statement   go to state 22
    svar        go to state 23
    sif         go to state 24
    swhile      go to state 25
    sread       go to state 26
    swrite      go to state 27
    var         go to state 28


State 110

   21 swhile: WHILE bool_expr LOOP statements ENDLOOP •

    $default  reduce using rule 21 (swhile)


State 111

   23 varLoop: COMMA var varLoop •

    $default  reduce using rule 23 (varLoop)


State 112

    6 declaration: identifiers COLON ARRAY LPAREN NUMBER RPAREN OF • INTEGER

    INTEGER  shift, and go to state 116


State 113

   58 expressionLoop: COMMA expression • expressionLoop

    COMMA  shift, and go to state 106

    $default  reduce using rule 57 (expressionLoop)

    expressionLoop  go to state 117


State 114

   56 term: Ident LPAREN expression expressionLoop RPAREN •

    $default  reduce using rule 56 (term)


State 115

   20 sif: IF bool_expr THEN statements ELSE statements • ENDIF

    ENDIF  shift, and go to state 118


State 116

    6 declaration: identifiers COLON ARRAY LPAREN NUMBER RPAREN OF INTEGER •

    $default  reduce using rule 6 (declaration)


State 117

   58 expressionLoop: COMMA expression expressionLoop •

    $default  reduce using rule 58 (expressionLoop)


State 118

   20 sif: IF bool_expr THEN statements ELSE statements ENDIF •

    $default  reduce using rule 20 (sif)
